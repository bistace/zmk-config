/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&lt { tapping-term-ms = <50>; };

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE  &kp NUMBER_1  &kp N2  &kp N3        &kp N4        &kp N5                                            &kp N6      &kp N7         &kp N8    &kp N9     &kp N0  &kp DEL
&kp TAB     &kp A         &kp C   &kp O         &kp P         &kp Z                                             &kp J       &kp SEMICOLON  &kp D     &kp SLASH  &kp Y   &kp BSPC
&mo 1       &kp Q         &kp S   &kp E         &kp N         &kp F                                             &kp L       &kp R          &kp T     &kp I      &kp U   &kp LEFT_BRACKET
&kp LSHFT   &kp W         &kp X   &kp M         &kp V         &kp B      &none               &none              &kp PERIOD  &kp H          &kp G     &kp COMMA  &kp K   &kp RSHFT
                          &none   &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE  &kp LEFT_CONTROL    &kp RIGHT_CONTROL  &kp ENTER   &mo 2          &kp RALT  &kp RGUI
            >;
        };

        Arrows {
            display-name = "arrows";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&bootloader  &studio_unlock  &trans  &trans  &ext_power EP_ON  &ext_power EP_OFF                    &sys_reset     &trans          &trans             &trans     &trans  &trans
&trans       &trans          &trans  &trans  &trans            &trans                               &trans         &kp SQT         &kp UP_ARROW       &trans     &trans  &trans
&trans       &trans          &trans  &trans  &trans            &trans                               &kp BACKSLASH  &kp LEFT_ARROW  &kp DOWN_ARROW     &kp RIGHT  &trans  &trans
&trans       &trans          &trans  &trans  &trans            &trans             &trans    &trans  &trans         &kp BACKSLASH   &kp LS(BACKSLASH)  &trans     &trans  &trans
                             &trans  &trans  &trans            &trans             &mo 3     &trans  &trans         &trans          &trans             &trans
            >;
        };

        Symbols {
            display-name = "symbols";
            bindings = <
&trans  &trans            &kp NON_US_BACKSLASH  &kp GRAVE         &kp LS(NON_US_BACKSLASH)  &trans                              &trans  &trans      &trans     &trans  &sys_reset  &bootloader
&trans  &kp RA(NUMBER_0)  &kp RIGHT_BRACKET     &kp NUMBER_5      &kp MINUS                 &kp RA(N7)                          &trans  &trans      &trans     &trans  &trans      &trans
&trans  &kp EQUAL         &kp RA(NUMBER_3)      &kp RA(N5)        &kp RA(MINUS)             &kp LS(EQUAL)                       &trans  &kp ESCAPE  &kp ENTER  &trans  &trans      &trans
&trans  &kp RA(NUMBER_8)  &kp RA(NUMBER_6)      &kp RA(NUMBER_4)  &kp RA(EQUAL)             &kp RA(NUMBER_2)  &trans    &trans  &trans  &trans      &trans     &trans  &trans      &trans
                          &trans                &trans            &trans                    &trans            &trans    &trans  &trans  &trans      &trans     &trans
            >;
        };

        Numbers {
            display-name = "numbers";
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans                        &trans          &trans            &trans            &trans            &trans         &trans
&trans  &trans        &trans        &trans  &trans  &trans                        &kp NUMBER_6    &kp LS(NUMBER_7)  &kp LS(N8)        &kp LS(N9)        &kp LS(EQUAL)  &trans
&trans  &trans        &trans        &trans  &trans  &trans                        &trans          &kp LS(NUMBER_4)  &kp LS(N5)        &kp LS(NUMBER_6)  &kp COMMA      &trans
&trans  &trans        &trans        &trans  &trans  &trans  &trans    &trans      &kp LS(PERIOD)  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp ASTERISK   &trans
                      &trans        &trans  &trans  &trans  &trans    &kp LS(N0)  &kp SPACE       &trans            &trans            &trans
            >;
        };

        blank {
            display-name = "blank";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
